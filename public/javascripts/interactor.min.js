var Interactor = function (n) {
    this.__init__(n)
};
Interactor.prototype = {
    __init__: function (n) {
        var e = this;
        return e.interactions = "boolean" != typeof n.interactions || n.interactions, e.interactionElement = "string" == typeof n.interactionElement ? n.interactionElement : "interaction", e.interactionEvents = !0 === Array.isArray(n.interactionEvents) ? n.interactionEvents : ["mouseup", "touchend"], e.conversions = "boolean" != typeof n.conversions || n.conversions, e.conversionElement = "string" == typeof n.conversionElement ? n.conversionElement : "conversion", e.conversionEvents = !0 === Array.isArray(n.conversionEvents) ? n.conversionEvents : ["mouseup", "touchend"], e.endpoint = "string" == typeof n.endpoint ? n.endpoint : "/interactions", e.async = "boolean" != typeof n.async || n.async, e.debug = "boolean" != typeof n.debug || n.debug, e.records = [], e.session = {}, e.loadTime = new Date, e.__initializeSession__(), e.__bindEvents__(), e
    },
    __bindEvents__: function () {
        var n = this;
        if (!0 === n.interactions)
            for (e = 0; e < n.interactionEvents.length; e++) document.querySelector("body").addEventListener(n.interactionEvents[e], function (e) {
                e.stopPropagation(), e.target.classList.value === n.interactionElement && n.__addInteraction__(e, "interaction")
            });
        if (!0 === n.conversions)
            for (var e = 0; e < n.conversionEvents.length; e++) document.querySelector("body").addEventListener(n.conversionEvents[e], function (e) {
                e.stopPropagation(), e.target.classList.value === n.conversionElement && n.__addInteraction__(e, "conversion")
            });
        return window.onbeforeunload = function (e) {
            n.__sendInteractions__()
        }, n
    },
    __addInteraction__: function (n, e) {
        var t = this,
            i = {
                type: e,
                event: n.type,
                targetTag: n.target.nodeName,
                targetClasses: n.target.className,
                content: n.target.innerText,
                clientPosition: {
                    x: n.clientX,
                    y: n.clientY
                },
                screenPosition: {
                    x: n.screenX,
                    y: n.screenY
                },
                createdAt: new Date
            };
        return t.records.push(i), t.debug && (t.__closeSession__(), console.log("Session:\n", t.session)), t
    },
    __initializeSession__: function () {
        var n = this;
        return n.session = {
            loadTime: n.loadTime,
            unloadTime: new Date,
            language: window.navigator.language,
            platform: window.navigator.platform,
            port: window.location.port,
            clientStart: {
                name: window.navigator.appVersion,
                innerWidth: window.innerWidth,
                innerHeight: window.innerHeight,
                outerWidth: window.outerWidth,
                outerHeight: window.outerHeight
            },
            page: {
                location: window.location.pathname,
                href: window.location.href,
                origin: window.location.origin,
                title: document.title
            },
            endpoint: n.endpoint
        }, n
    },
    __closeSession__: function () {
        var n = this;
        return n.session.unloadTime = new Date, n.session.interactions = n.records, n.session.clientEnd = {
            name: window.navigator.appVersion,
            innerWidth: window.innerWidth,
            innerHeight: window.innerHeight,
            outerWidth: window.outerWidth,
            outerHeight: window.outerHeight
        }, n
    },
    __sendInteractions__: function () {
        var n = this,
            e = new XMLHttpRequest;
        return n.__closeSession__(), e.open("POST", n.endpoint, n.async), e.setRequestHeader("Content-Type", "application/json; charset=UTF-8"), e.send(JSON.stringify(n.session)), n
    }
};